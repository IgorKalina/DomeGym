services:
  api:
    profiles: [ "api" ]
    container_name: domegym.gym_management_api
    image: domegym.gym_management_api
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - domegym.postgres.network
    volumes:
      - ./.env:/app/.env:ro
    environment:
      GYM_MANAGEMENT_DATABASE__HOST: domegym.postgres
      GYM_MANAGEMENT_DATABASE__PORT: 5432
    healthcheck:
      test: [ "CMD", "python", "/app/scripts/gym_management_healthcheck.py" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  postgres:
    profiles: [ "api", "dependency" ]
    container_name: domegym.postgres
    image: "postgres:16-alpine"
    hostname: domegym.postgres
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "127.0.0.1:15432:5432"
    networks:
      - domegym.postgres.network
    environment:
      POSTGRES_PASSWORD: $GYM_MANAGEMENT_DATABASE__USER__PASSWORD
      POSTGRES_USER: ${GYM_MANAGEMENT_DATABASE__USER__NAME:-$USER}
      POSTGRES_DB: ${GYM_MANAGEMENT_DATABASE__NAME:-$USER}
    volumes:
      - domegym.postgres.data:/var/lib/postgresql/domegym.gym_mamangement:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${GYM_MANAGEMENT_DATABASE__NAME} -U ${GYM_MANAGEMENT_DATABASE__USER__NAME}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  postgres_migration:
    profiles: [ "api", "dependency" ]
    container_name: domegym.postgres_migration
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - domegym.postgres.network
    volumes:
      - ./alembic.ini:/app/alembic.ini:ro
      - ./.env:/app/.env:ro
      - ./src/gym_management/infrastructure/common/postgres/migrations:/app/src/gym_management/infrastructure/common/postgres/migrations:ro
    environment:
      GYM_MANAGEMENT_DATABASE__HOST: domegym.postgres
      GYM_MANAGEMENT_DATABASE__PORT: 5432
    command: ["-m", "alembic", "upgrade", "head"]

  rabbitmq:
    profiles: [ "api", "dependency" ]
    container_name: domegym.rabbitmq
    image: "rabbitmq:4.0.5-management-alpine"
    hostname: domegym.rabbitmq
    restart: unless-stopped
    expose:
      - "5672"
      - "15672"
    ports:
      - "127.0.0.1:5672:5672"  # AMQP port
      - "127.0.0.1:15672:15672"  # Management UI port
    networks:
      - domegym.postgres.network
    volumes:
      - domegym.rabbitmq.data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

volumes:
  domegym.postgres.data: {}
  domegym.rabbitmq.data: {}

networks:
  domegym.postgres.network: {}
